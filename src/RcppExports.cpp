// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// maximum_clique
StringVector maximum_clique(std::string filename);
RcppExport SEXP _cliqueR_maximum_clique(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    rcpp_result_gen = Rcpp::wrap(maximum_clique(filename));
    return rcpp_result_gen;
END_RCPP
}
// find_paracliques
std::vector<std::vector<std::string> > find_paracliques(std::string filename, double igf, int min_mc_size, int min_pc_size, int max_num_pcs);
RcppExport SEXP _cliqueR_find_paracliques(SEXP filenameSEXP, SEXP igfSEXP, SEXP min_mc_sizeSEXP, SEXP min_pc_sizeSEXP, SEXP max_num_pcsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< double >::type igf(igfSEXP);
    Rcpp::traits::input_parameter< int >::type min_mc_size(min_mc_sizeSEXP);
    Rcpp::traits::input_parameter< int >::type min_pc_size(min_pc_sizeSEXP);
    Rcpp::traits::input_parameter< int >::type max_num_pcs(max_num_pcsSEXP);
    rcpp_result_gen = Rcpp::wrap(find_paracliques(filename, igf, min_mc_size, min_pc_size, max_num_pcs));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP R_maximal_clique(SEXP, SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_cliqueR_maximum_clique", (DL_FUNC) &_cliqueR_maximum_clique, 1},
    {"_cliqueR_find_paracliques", (DL_FUNC) &_cliqueR_find_paracliques, 5},
    {"R_maximal_clique", (DL_FUNC) &R_maximal_clique, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_cliqueR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
